/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ssh.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.rpc.holders.Holder;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.json.JSONArray;
import org.json.JSONObject;

import com.ssh.citizen.Citizen;
import com.ssh.citizen.CitizenDAO;
import com.ssh.common.Global;
import com.ssh.struts.form.SearchForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-10-2018
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class GetCitizenAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		String danyuan = request.getParameter("danyuan");
		String location = request.getParameter("location");
		String name = request.getParameter("name");
		CitizenDAO citizenDAO = (CitizenDAO) Global.getDAO(CitizenDAO.TAG);
		
		List<Citizen> list1 = new ArrayList<Citizen>();
		List<Citizen> list2 = new ArrayList<Citizen>();
		List<Citizen> list3 = new ArrayList<Citizen>();
		
		if (null != danyuan && danyuan.length()>0) {
		
		Citizen danyuanC = new Citizen();
		danyuanC.setDanyuanNum(danyuan);
		list1 = citizenDAO.findByExample(danyuanC);
		
		}
		
		if (null != location && location.length()>0) {
		Citizen locationC = new Citizen();
		locationC.setLocation(location);
		list2 = citizenDAO.findByExample(locationC);
		}
		
		if (null != name && name.length()>0) {
		Citizen nameCitizen = new Citizen();
		nameCitizen.setName(name);
		list3 = citizenDAO.findByExample(nameCitizen);
		}
		
		List<Citizen> resultList = new ArrayList<Citizen>();
		if (list1.size()>0) {
			resultList = list1;
		}
		if (list2.size()>0) {
			if (null != resultList) {
				for(Citizen itemCitizen : list2) {
					boolean duplicate = false;
					for (int i = 0; i < resultList.size(); i++) {
						if (itemCitizen.sameCittizen(resultList.get(i))) {
							duplicate=true;
							break;
						}
						
					}
					if (!duplicate) {
						resultList.add(itemCitizen);
					}
					
				}
			}else {
				resultList = list2;
			}
		}
		
		if (list3.size()>0) {
			if (null != resultList) {
				for(Citizen itemCitizen : list3) {
					boolean duplicate = false;
					for (int i = 0; i < resultList.size(); i++) {
						if (itemCitizen.sameCittizen(resultList.get(i))) {
							duplicate=true;
							break;
						}
						
					}
					if (!duplicate) {
						resultList.add(itemCitizen);
					}
					
				}
			}else {
				resultList = list3;
			}
		}
		
		response.setContentType("text/html;charset=utf-8");
		PrintWriter out = response.getWriter();
		
		if (null == resultList || 0 == resultList.size()) {
			JSONObject json = new JSONObject();
			json.put("error", "no result!");
			out.print(json.toString());
		}else {
			JSONArray json = new JSONArray();
			for (Citizen citizen : resultList) {
				JSONObject jo = new JSONObject();
				jo.put("danyuan", String.valueOf(citizen.getDanyuanNum()));
				jo.put("location", citizen.getLocation());
				jo.put("name", citizen.getName());
				jo.put("imageURL", citizen.getPhotoUrl());
				json.put(jo);
			}
			out.print(json.toString());
		}
	
		return null;
	}
}